{"version":3,"sources":["components/Context.js","components/Product.jsx","components/ProductsPage.jsx","components/Home.jsx","components/Contact.jsx","components/Footer.jsx","components/CartProduct.jsx","components/Cart.jsx","components/Checkout.jsx","components/Login.jsx","components/ContactsAdmin.jsx","App.js","serviceWorker.js","index.js"],"names":["MyContext","React","createContext","Product","props","react_default","a","createElement","Context","Consumer","_ref","addToCart","data-type","productType","data-price","productPrice","className","src","productImage","alt","productImageAlt","href","productName","productDescription","onClick","ProductsPage","state","products","componentDidMount","_this","fetchAllProducts","product_type","Object","asyncToGenerator","regenerator_default","mark","_callee","port","_fetchData","_data","fetchData","data","wrap","_context","prev","next","process","PORT","fetch","concat","sent","json","setState","abrupt","stop","sortByPriceHandler","slice","sort","b","product_price","sortByTypeHandler","typeA","typeB","unsortHandler","unfilterHandler","role","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","this","map","value","i","components_Product","key","product_name","product_description","product_image","PureComponent","slideImages","properties","duration","transitionDuration","infinite","indicators","arrows","onChange","oldIndex","newIndex","console","log","Home","lib","style","backgroundImage","Contact","nameValue","emailValue","subjectValue","messageValue","formErrors","submittedSuccessfully","postForm","form","response","headers","Content-Type","method","body","JSON","stringify","nameOnChangeHandler","e","target","emailOnChangeHandler","subjectOnChangeHandler","messageOnChangeHandler","formValidation","errors","push","indexOf","length","name","email","subject","message","displayErrors","error","Fragment","action","type","htmlFor","rows","Footer","CartProduct","scope","product","placeholder","quantity","aria-label","width","productTotal","data-placement","title","data-original-title","Cart","context","cartProducts","cart","index","components_CartProduct","subtotal","forEach","colSpan","react_router_dom","to","Checkout","selected","Login","username","password","logginIn","usernameOnChange","passwordOnChange","loginHandler","credentials","loggedInMessage","loginMessage","react_router","ContactsAdmin","contacts","fetchAllContacts","_callee2","_context2","productsMap","product_id","contactsMap","contact","contact_id","contact_name","contact_email","Component","App","addedProduct","some","updatedCart","objectSpread","addProduct","splice","prevState","toConsumableArray","totalOfProducts","Provider","data-target","aria-controls","exact","activeClassName","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,EAAAC,EAAAC,cAAA,UAAQkE,MAAM,MAAd,MACApE,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","file":"static/js/main.def01773.chunk.js","sourcesContent":["import React from 'react';\nconst MyContext = React.createContext(); \nexport default MyContext;","import React from \"react\";\n\n//React Context\nimport MyContext from './Context'\n\nconst Product = props => {\n  return (\n    <MyContext.Consumer>\n      {({ addToCart }) => (\n        <div data-type={props.productType} data-price={props.productPrice} className=\"col-md-4 sortclassName\">\n          {/* <!-- Card --> */}\n          <div className=\"card\">\n            {/* <!-- Card image --> */}\n            <div className=\"view overlay\">\n              <img className=\"card-img-top\" src={props.productImage} alt={props.productImageAlt} />\n              <a href=\"#!\">\n                <div className=\"mask rgba-white-slight\" />\n              </a>\n            </div>\n\n            {/* <!-- Card content --> */}\n            <div className=\"card-body\">\n              {/* <!-- Title --> */}\n              <h4 className=\"card-title\">{props.productName}</h4>\n              {/* <!-- Text --> */}\n              <p className=\"card-text\">${props.productPrice}</p>\n              {/* <!-- Button --> */}\n              <p className=\"card-text\">{props.productDescription}</p>\n              <a href=\"##\" className=\"btn btn-primary\" onClick={addToCart(props)}>\n                Add to Cart\n          </a>\n            </div>\n          </div>\n          {/* <!-- Card --> */}\n        </div>\n      )}\n    </MyContext.Consumer>\n  );\n};\n\nexport default Product;\n","// Dependencies\nimport React from \"react\";\n\n// Components\nimport Product from \"./Product\";\n\n// CSS Files\nimport \"../css/bootstrap.min.css\";\nimport \"../css/mdb.min.css\";\nimport \"../css/style.css\";\nimport \"../App.css\";\n\n\n\nclass ProductsPage extends React.PureComponent {\n  state = {\n    products: []\n  };\n  componentDidMount = () => {\n    this.fetchAllProducts()();\n  }\n  fetchAllProducts = (product_type) => async () => {\n    const port = process.env.PORT || 25565;\n    // Fetch all products\n    if (product_type) {\n      const fetchData = await fetch(`http://localhost:${port}/api/products/?type=${product_type}`);\n      const data = await fetchData.json();\n      this.setState({ products: data })\n      return;\n    }\n    const fetchData = await fetch(`http://localhost:${port}/api/products`);\n    const data = await fetchData.json();\n    this.setState({ products: data })\n  }\n  sortByPriceHandler = () => {\n    function compareByPrice(a, b) {\n      const priceA = a.product_price;\n      const priceB = b.product_price;\n      return priceA - priceB;\n    }\n    this.setState({\n      products: this.state.products.slice().sort(compareByPrice)\n    });\n  };\n  sortByTypeHandler = () => {\n    function compareByType(a, b) {\n      const typeA = a.product_type;\n      const typeB = b.product_type;\n      if (typeA < typeB) {\n        return -1;\n      }\n      if (typeA > typeB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    this.setState({\n      products: this.state.products.slice().sort(compareByType)\n    });\n  };\n  unsortHandler = () => {\n    this.fetchAllProducts()();\n  };\n  unfilterHandler = () => {\n    this.fetchAllProducts()();\n  };\n\n  render() {\n    return (\n      <div className=\"page-wrapper\">\n        <div className=\"container container-bg productsContainer-bg productsDiv\">\n          <div className=\"dropdown sortAndFilter\">\n            <a\n              className=\"dropdownButton btn dropdown-toggle\"\n              href=\"###\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Sort\n            </a>\n\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.sortByTypeHandler}>\n                Sort by type\n              </a>\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.sortByPriceHandler}>\n                Sort by price\n              </a>\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.unsortHandler}>\n                Unsort\n              </a>\n            </div>\n          </div>\n          <div className=\"dropdown sortAndFilter\">\n            <a\n              className=\"dropdownButton btn dropdown-toggle\"\n              href=\"###\"\n              role=\"button\"\n              id=\"dropdownMenuLink\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              Filter\n            </a>\n\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.fetchAllProducts('computer')}>\n                Computers\n              </a>\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.fetchAllProducts('camera')}>\n                Cameras\n              </a>\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.fetchAllProducts('printer')}>\n                Printers\n              </a>\n              <a className=\"dropdown-item\" href=\"###\" onClick={this.unsortHandler}>\n                Unfilter\n              </a>\n            </div>\n          </div>\n\n          <div className=\"row sortedProductsRow\">\n            {this.state.products.map((value, i) => {\n              return (\n                <Product\n                  key={i}\n                  productName={value.product_name}\n                  productPrice={value.product_price}\n                  productType={value.product_type}\n                  productDescription={value.product_description}\n                  productImage={value.product_image}\n                  productImageAlt={value.product_name}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductsPage;\n","// Dependencies\nimport React from \"react\";\nimport { Slide } from \"react-slideshow-image\";\n\n// CSS Files\nimport \"../css/bootstrap.min.css\";\nimport \"../css/mdb.min.css\";\nimport \"../css/style.css\";\nimport \"../css/slide.css\";\n\n//Slide images\nconst slideImages = [\n  \"./lib/img/slideImg1.png\",\n  \"./lib/img/slideImg2.jpeg\",\n  \"./lib/img/slideImg3.png\"\n];\n\n//Properties for slideshow\nconst properties = {\n  duration: 5000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  arrows: true,\n  onChange: (oldIndex, newIndex) => {\n    console.log(`slide transition from ${oldIndex} to ${newIndex}`);\n  }\n};\n\nclass Home extends React.PureComponent {\n  render() {\n    return (\n      // {/* <!-- Content --> */}\n      <div className=\"page-wrapper\">\n        <div className=\"container container-bg\">\n          <div className=\"slide-container\">\n            <Slide {...properties}>\n              <div className=\"each-slide\">\n                <div style={{ backgroundImage: `url(${slideImages[0]})` }}>\n                </div>\n              </div>\n              <div className=\"each-slide\">\n                <div style={{ backgroundImage: `url(${slideImages[1]})` }}>\n                </div>\n              </div>\n              <div className=\"each-slide\">\n                <div style={{ backgroundImage: `url(${slideImages[2]})` }}>\n                </div>\n              </div>\n            </Slide>\n          </div>\n\n          <h2 className=\"text-center p-4\">\n            <u>\n              <b>Who We Are</b>\n            </u>\n          </h2>\n          <p className=\"p-4 homeText\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce\n            semper, risus sit amet lacinia fringilla, dolor ligula faucibus mi,\n            quis congue mauris mauris vel lacus. Proin suscipit convallis\n            posuere. Suspendisse bibendum metus erat, ac placerat elit imperdiet\n            at. Nunc non dolor nec dolor malesuada aliquet vel eu ipsum. Proin\n            ultrices mauris urna, at maximus velit ultrices sed. Vivamus sed\n            venenatis purus, ut feugiat sem. Nam sit amet tristique tellus, quis\n            faucibus quam. Mauris venenatis justo id nibh euismod ultricies ut\n            vehicula lectus. Integer non justo consectetur, fermentum turpis\n            congue, viverra tortor. Vivamus lobortis, diam in consectetur\n            viverra, arcu urna volutpat nisl, non pellentesque neque nisl et\n            metus. Donec quam mi, tristique non efficitur a, malesuada vitae\n            odio. Nullam feugiat, augue eu lobortis commodo, felis elit volutpat\n            odio, vel semper arcu enim in eros. Nullam mollis sed nibh ut\n            viverra. Vestibulum vehicula, magna eget feugiat venenatis, odio\n            dolor commodo libero, in sodales lacus sem sed tortor. Curabitur\n            posuere ante nec convallis suscipit. Aliquam felis enim, egestas id\n            malesuada non, finibus id massa. Nunc hendrerit purus arcu, at\n            commodo odio ultrices eget. Integer sit amet semper lorem. Phasellus\n            consectetur purus id eros suscipit, nec malesuada nibh posuere.\n            Suspendisse bibendum vulputate mattis.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Home;\n","//Dependencies\nimport React from \"react\";\n\n//CSS\nimport \"../css/contact.css\";\n\nclass Contact extends React.PureComponent {\n  //Create intitial state with empty values for what will be form values\n  state = {\n    nameValue: \"\",\n    emailValue: \"\",\n    subjectValue: \"\",\n    messageValue: \"\",\n    formErrors: [],\n    submittedSuccessfully: false\n  };\n\n  //For posting form to server and eventually updating DB with this information\n  postForm = async (form) => {\n    const port = process.env.PORT || 25565\n    const response = await fetch(`http://localhost:${port}/api/newcontact`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(form)\n    })\n    const data = await response.json()\n  }\n\n  //onChange handlers for updating state when values are entered\n  nameOnChangeHandler = e => {\n    this.setState({ nameValue: e.target.value });\n  };\n  emailOnChangeHandler = e => {\n    this.setState({ emailValue: e.target.value });\n  };\n  subjectOnChangeHandler = e => {\n    this.setState({ subjectValue: e.target.value });\n  };\n  messageOnChangeHandler = e => {\n    this.setState({ messageValue: e.target.value });\n  };\n  \n  //Called when user clicks 'Submit' on the form page. Validates entries\n  formValidation = () => {\n    const errors = [];\n    if (this.state.nameValue === \"\") {\n      errors.push(\"Please enter a name.\");\n    }\n    if (\n      this.state.emailValue === \"\" ||\n      this.state.emailValue.indexOf(\"@\") === -1\n    ) {\n      errors.push(\"Please enter a valid Email.\");\n    }\n    if (this.state.subjectValue === \"\") {\n      errors.push(\"Please enter a subject.\");\n    }\n    if (this.state.messageValue === \"\") {\n      errors.push(\"Please enter a message.\");\n    }\n    if (this.state.messageValue.length > 255){\n      errors.push(`Message length must be below 255 characters. It is currently ${this.state.messageValue.length} characters long`);\n    }\n    this.setState({ formErrors: errors });\n    //If there are no errors found formSubmit will call postForm to create a POST request to the back end\n    if (errors.length === 0) {\n      this.setState({ submittedSuccessfully: true });\n      this.postForm({\n        name: this.state.nameValue,\n        email: this.state.emailValue,\n        subject: this.state.subjectValue,\n        message: this.state.messageValue\n      }); \n    }\n  };\n\n  render() {\n    //Map for displaying form validation errors\n    const displayErrors = this.state.formErrors.map((error, i) => {\n      return (\n        <div key={i} className=\"formErrorDiv\">\n          <p className=\"formErrorText\">{error}</p>\n        </div>\n      );\n    });\n    return (\n      <>\n        <div className=\"container container-bg contactFormDiv\">\n          <section className=\"mb-4 contactForm\">\n            {/* <!--Section heading--> */}\n            <h2 className=\"h1-responsive font-weight-bold text-center my-4\">\n              Contact us\n            </h2>\n            {/* <!--Section description--> */}\n            <p className=\"text-center w-responsive mx-auto mb-5\">\n              Do you have any questions? Please do not hesitate to contact us\n              directly. Our team will contact you within 24 hours to help.\n            </p>\n\n            <div className=\"row\">\n              {/* <!--Grid column--> */}\n              <div className=\"col-md-9 mb-md-0 mb-5\">\n                <form\n                  id=\"contact-form\"\n                  name=\"contact-form\"\n                  action=\"mail.php\"\n                  method=\"POST\"\n                >\n                  {/* <!--Grid row--> */}\n                  <div className=\"row\">\n                    {/* <!--Grid column--> */}\n                    <div className=\"col-md-6\">\n                      <div className=\"md-form mb-0\">\n                        <input\n                          type=\"text\"\n                          id=\"name\"\n                          name=\"name\"\n                          className=\"form-control\"\n                          onChange={this.nameOnChangeHandler}\n                        />\n                        <label htmlFor=\"name\" className=\"\">\n                          Your name\n                        </label>\n                      </div>\n                    </div>\n                    {/* <!--Grid column--> */}\n\n                    {/* <!--Grid column--> */}\n                    <div className=\"col-md-6\">\n                      <div className=\"md-form mb-0\">\n                        <input\n                          type=\"text\"\n                          id=\"email\"\n                          name=\"email\"\n                          className=\"form-control\"\n                          onChange={this.emailOnChangeHandler}\n                        />\n                        <label htmlFor=\"email\" className=\"\">\n                          Your email\n                        </label>\n                      </div>\n                    </div>\n                    {/* <!--Grid column--> */}\n                  </div>\n                  {/* <!--Grid row--> */}\n\n                  {/* <!--Grid row--> */}\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <div className=\"md-form mb-0\">\n                        <input\n                          type=\"text\"\n                          id=\"subject\"\n                          name=\"subject\"\n                          className=\"form-control\"\n                          onChange={this.subjectOnChangeHandler}\n                        />\n                        <label htmlFor=\"subject\" className=\"\">\n                          Subject\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <!--Grid row--> */}\n\n                  {/* <!--Grid row--> */}\n                  <div className=\"row\">\n                    {/* <!--Grid column--> */}\n                    <div className=\"col-md-12\">\n                      <div className=\"md-form\">\n                        <textarea\n                          id=\"message\"\n                          name=\"message\"\n                          rows=\"2\"\n                          className=\"form-control md-textarea\"\n                          onChange={this.messageOnChangeHandler}\n                        />\n                        <label htmlFor=\"message\">Your message</label>\n                      </div>\n                    </div>\n                  </div>\n                  {/* <!--Grid row--> */}\n                </form>\n\n                <div className=\"text-center text-md-left\">\n                  <a\n                    id=\"send\"\n                    href=\"###\"\n                    className=\"btn btn-primary\"\n                    onClick={this.formValidation}\n                  >\n                    Send\n                  </a>\n                </div>\n                <div className=\"status\" />\n              </div>\n              {/* <!--Grid column--> */}\n\n              {/* <!--Grid column--> */}\n              <div className=\"col-md-3 text-center\">\n                <ul className=\"list-unstyled mb-0\">\n                  <li>\n                    <i className=\"fas fa-map-marker-alt fa-2x\" />\n                    <p>Detroit, MI 48127, USA</p>\n                  </li>\n\n                  <li>\n                    <i className=\"fas fa-phone mt-4 fa-2x\" />\n                    <p>+ 01 (555) 555 5555</p>\n                  </li>\n\n                  <li>\n                    <i className=\"fas fa-envelope mt-4 fa-2x\" />\n                    <p>DylanBarber1@Outlook.com</p>\n                  </li>\n                </ul>\n              </div>\n              {/* <!--Grid column--> */}\n              {/* If form was submitted successfully display this message */}\n              {this.state.submittedSuccessfully ? (\n                <div className=\"formSubmittedDiv\">\n                  <p className=\"formSubmittedText\">\n                    Your form has been submitted!\n                  </p>\n                </div>\n              ) : (\n                <div className=\"formErrorsFoundWrapper\">{displayErrors}</div>\n              )}\n            </div>\n          </section>\n          {/* <!--Section: Contact v.2--> */}\n        </div>\n      </>\n    );\n  }\n}\nexport default Contact;\n","// Dependencies\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    // {/* <!-- Footer --> */}\n    // <div className='footerWrapper'>\n    <footer className=\"page-footer font-small primary-color pt-4 align-items-end\">\n      {/* <!-- Footer Links --> */}\n      <div className=\"container text-center text-md-left\">\n        {/* <!-- Grid row --> */}\n        <div className=\"row\">\n          {/* <!-- Grid column --> */}\n          <div className=\"col-md-4 mx-auto\">\n            {/* <!-- Content --> */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">\n              Disclaimer\n            </h5>\n            <p>\n              DB Electronics is a publicy traded company. Access to the\n              information and the documents contained on this portion of DB\n              Electronics' website is restricted for regulatory reasons.\n            </p>\n          </div>\n          {/* <!-- Grid column --> */}\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n          {/* <!-- Grid column --> */}\n          <div className=\"col-md-2 mx-auto\">\n            {/* <!-- Links --> */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">News</h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Sign up for our Newsletter!</a>\n              </li>\n              <li>\n                <a href=\"#!\">DB News</a>\n              </li>\n              <li>\n                <a href=\"#!\">Industry News</a>\n              </li>\n            </ul>\n          </div>\n          {/* <!-- Grid column --> */}\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n          {/* <!-- Grid column --> */}\n          <div className=\"col-md-2 mx-auto\">\n            {/* <!-- Links --> */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Legal</h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Please</a>\n              </li>\n              <li>\n                <a href=\"#!\">Don't</a>\n              </li>\n              <li>\n                <a href=\"#!\">Sue</a>\n              </li>\n              <li>\n                <a href=\"#!\">Me</a>\n              </li>\n            </ul>\n          </div>\n          {/* <!-- Grid column --> */}\n\n          <hr className=\"clearfix w-100 d-md-none\" />\n\n          {/* <!-- Grid column --> */}\n          <div className=\"col-md-2 mx-auto\">\n            {/* <!-- Links --> */}\n            <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">\n              Rewards\n            </h5>\n\n            <ul className=\"list-unstyled\">\n              <li>\n                <a href=\"#!\">Sign up!</a>\n              </li>\n              <li>\n                <a href=\"#!\">Customer Deals</a>\n              </li>\n              <li>\n                <a href=\"#!\">Member Deals</a>\n              </li>\n            </ul>\n          </div>\n          {/* <!-- Grid column --> */}\n        </div>\n        {/* <!-- Grid row --> */}\n      </div>\n      {/* <!-- Footer Links --> */}\n\n      {/* <!-- Call to action --> */}\n\n      <hr />\n      {/* <!-- Social buttons --> */}\n      <ul className=\"list-unstyled list-inline text-center\">\n        <li className=\"list-inline-item\">\n          <a href=\"###\" className=\"btn-floating btn-fb mx-1\">\n            <i className=\"fab fa-facebook-f\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"###\" className=\"btn-floating btn-tw mx-1\">\n            <i className=\"fab fa-twitter\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"###\" className=\"btn-floating btn-gplus mx-1\">\n            <i className=\"fab fa-google-plus-g\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"###\" className=\"btn-floating btn-li mx-1\">\n            <i className=\"fab fa-linkedin-in\"> </i>\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"###\" className=\"btn-floating btn-dribbble mx-1\">\n            <i className=\"fab fa-dribbble\"> </i>\n          </a>\n        </li>\n      </ul>\n      {/* <!-- Social buttons --> */}\n\n      {/* <!-- Copyright --> */}\n      <div className=\"footer-copyright text-center py-3\">\n        © 2019 Copyright:\n        <a href=\"./index.html\"> DBElectronics.com</a>\n      </div>\n      {/* <!-- Copyright --> */}\n    </footer>\n    // </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst CartProduct = props => {\n\n  return (\n    <tr>\n      <th scope=\"row\">\n        <img src={props.product.productImage} alt={props.product.productImageAlt} className=\"img-fluid z-depth-0\"></img>\n      </th>\n      <td>\n        <h5 className=\"mt-3\">\n          <strong>{props.product.productName}</strong>\n        </h5>\n      </td>\n      <th></th>\n      <td>${props.product.productPrice}</td>\n      <td>\n        <input type=\"number\" placeholder={props.product.quantity} aria-label=\"Search\" className=\"form-control\" style={{ width: \"100px\" }}></input>\n      </td>\n      <td className=\"font-weight-bold\">\n        <strong>{props.product.productTotal}</strong>\n      </td>\n      <td>\n        <button type=\"button\" className=\"btn btn-sm btn-primary waves-effect waves-light\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"\" data-original-title=\"Remove item\">X\n        </button>\n      </td>\n    </tr>\n\n  )\n}\n\nexport default CartProduct; ","//Dependencies\nimport React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n//Components\nimport CartProduct from './CartProduct';\n\n//React Context for cart information\nimport MyContext from './Context';\n\nconst Cart = () => {\n  return (\n    <MyContext.Consumer>\n      {(context) => {\n        //Mapping over cart products array to display a CartProduct component for each \n        const cartProducts = context.cart.map((product, index) => (\n          <CartProduct\n            product = {product}\n            key = {index}\n          />\n        ))\n        let subtotal = 0;\n        context.cart.forEach(product => {\n            subtotal += product.quantity * product.productPrice;\n          })\n        return (\n          <div className=\"container container-bg cartContainer\" >\n            <div className=\"table-responsive\">\n\n              <table className=\"table product-table\">\n\n                {/* <!-- Table head --> */}\n                <thead className=\"mdb-color lighten-5\">\n                  <tr>\n                    <th></th>\n                    <th className=\"font-weight-bold\">\n                      <strong>Product</strong>\n                    </th>\n                    <th></th>\n                    <th className=\"font-weight-bold\">\n                      <strong>Price</strong>\n                    </th>\n                    <th className=\"font-weight-bold\">\n                      <strong>QTY</strong>\n                    </th>\n                    <th className=\"font-weight-bold\">\n                      <strong>Amount</strong>\n                    </th>\n                    <th></th>\n                  </tr>\n                </thead>\n                {/* <!-- /.Table head --> */}\n\n                {/* <!-- Table body --> */}\n                <tbody>\n                  {cartProducts}\n                  {/* <!-- /.Third row --> */}\n\n                  {/* <!-- Fourth row --> */}\n                  <tr>\n                    <td colSpan=\"3\"></td>\n                    <td>\n                      <h4 className=\"mt-2\">\n                        <strong>Total</strong>\n                      </h4>\n                    </td>\n                    <td className=\"text-right\">\n                      <h4 className=\"mt-2\">\n                        <strong>${subtotal}</strong>\n                      </h4>\n                    </td>\n                    <td colSpan=\"3\" className=\"text-right\">\n                      <NavLink to=\"/Checkout\">\n                        <button type=\"button\" className=\"btn btn-primary btn-rounded waves-effect waves-light\">Checkout\n                  <i className=\"fas fa-angle-right right\"></i>\n                        </button>\n                      </NavLink>\n                    </td>\n                  </tr>\n                  {/* <!-- Fourth row --> */}\n\n                </tbody>\n                {/* <!-- /.Table body --> */}\n\n              </table>\n\n            </div>\n          </div>\n        );\n      }}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Cart;","import React from \"react\";\n// CSS Files\nimport \"../css/bootstrap.min.css\";\nimport \"../css/mdb.min.css\";\nimport \"../css/style.css\";\n\nconst Checkout = () => {\n  return (\n    <div className=\"container checkoutContainer container-bg\">\n      <div className='row'>\n        <div className='col-md-4'>\n          <div className='card paymentInfo'>\n            <h2>Payment info</h2>\n            <input placeholder=\"Name on Card*\"/>\n            <div className='cardNumber'>\n              <input placeholder='Card Number*'/>\n              <select selected=\"Type\">\n                <option>Type</option>\n                <option value=\"mastercard\">Mastercard</option>\n                <option value=\"visa\">Visa</option>\n                <option value=\"amex\">American Express</option>\n              </select>\n            </div>\n            <div className=\"expCvv\">\n              <input placeholder=\"Expiration*\"/>\n              <input placeholder=\"CVV*\"/>\n            </div>\n          </div>\n        </div>\n        <div className='col-md-4'>\n          <div className='card shippingInfo'>\n            <h2>Shipping Info</h2>\n            <input placeholder=\"First Name*\" />\n            <input placeholder=\"Last Name*\" />\n            <div className='streetAndApt'>\n              <input placeholder=\"Street Address*\" />\n              <input id='aptNum' placeholder=\"Apt / Suite\" />\n            </div>\n            <div className='stateAndCity'>\n              <input placeholder='City*' />\n              <select selected='State'>\n                <option>State</option>\n                <option value=\"AL\">AL</option>\n                <option value=\"AK\">AK</option>\n                <option value=\"AR\">AR</option>\n                <option value=\"AZ\">AZ</option>\n                <option value=\"CA\">CA</option>\n                <option value=\"CO\">CO</option>\n                <option value=\"CT\">CT</option>\n                <option value=\"DC\">DC</option>\n                <option value=\"DE\">DE</option>\n                <option value=\"FL\">FL</option>\n                <option value=\"GA\">GA</option>\n                <option value=\"HI\">HI</option>\n                <option value=\"IA\">IA</option>\n                <option value=\"ID\">ID</option>\n                <option value=\"IL\">IL</option>\n                <option value=\"IN\">IN</option>\n                <option value=\"KS\">KS</option>\n                <option value=\"KY\">KY</option>\n                <option value=\"LA\">LA</option>\n                <option value=\"MA\">MA</option>\n                <option value=\"MD\">MD</option>\n                <option value=\"ME\">ME</option>\n                <option value=\"MI\">MI</option>\n                <option value=\"MN\">MN</option>\n                <option value=\"MO\">MO</option>\n                <option value=\"MS\">MS</option>\n                <option value=\"MT\">MT</option>\n                <option value=\"NC\">NC</option>\n                <option value=\"NE\">NE</option>\n                <option value=\"NH\">NH</option>\n                <option value=\"NJ\">NJ</option>\n                <option value=\"NM\">NM</option>\n                <option value=\"NV\">NV</option>\n                <option value=\"NY\">NY</option>\n                <option value=\"ND\">ND</option>\n                <option value=\"OH\">OH</option>\n                <option value=\"OK\">OK</option>\n                <option value=\"OR\">OR</option>\n                <option value=\"PA\">PA</option>\n                <option value=\"RI\">RI</option>\n                <option value=\"SC\">SC</option>\n                <option value=\"SD\">SD</option>\n                <option value=\"TN\">TN</option>\n                <option value=\"TX\">TX</option>\n                <option value=\"UT\">UT</option>\n                <option value=\"VT\">VT</option>\n                <option value=\"VA\">VA</option>\n                <option value=\"WA\">WA</option>\n                <option value=\"WI\">WI</option>\n                <option value=\"WV\">WV</option>\n                <option value=\"WY\">WY</option>\n                <option value=\"AS\">AS</option>\n                <option value=\"GU\">GU</option>\n                <option value=\"MP\">MP</option>\n                <option value=\"PR\">PR</option>\n                <option value=\"UM\">UM</option>\n                <option value=\"VI\">VI</option>\n                <option value=\"AA\">AA</option>\n                <option value=\"AP\">AP</option>\n                <option value=\"AE\">AE</option>\n              </select>\n            </div>\n            <div className='countryAndZip'>\n              <select selected=\"Country\">\n                <option>Country</option>\n                <option value=\"ISO 3166-2:AF\">Afghanistan</option>\n                <option value=\"ISO 3166-2:AX\">Åland Islands</option>\n                <option value=\"ISO 3166-2:AL\">Albania</option>\n                <option value=\"ISO 3166-2:DZ\">Algeria</option>\n                <option value=\"ISO 3166-2:AS\">American Samoa</option>\n                <option value=\"ISO 3166-2:AD\">Andorra</option>\n                <option value=\"ISO 3166-2:AO\">Angola</option>\n                <option value=\"ISO 3166-2:AI\">Anguilla</option>\n                <option value=\"ISO 3166-2:AQ\">Antarctica</option>\n                <option value=\"ISO 3166-2:AG\">Antigua and Barbuda</option>\n                <option value=\"ISO 3166-2:AR\">Argentina</option>\n                <option value=\"ISO 3166-2:AM\">Armenia</option>\n                <option value=\"ISO 3166-2:AW\">Aruba</option>\n                <option value=\"ISO 3166-2:AU\">Australia</option>\n                <option value=\"ISO 3166-2:AT\">Austria</option>\n                <option value=\"ISO 3166-2:AZ\">Azerbaijan</option>\n                <option value=\"ISO 3166-2:BS\">Bahamas</option>\n                <option value=\"ISO 3166-2:BH\">Bahrain</option>\n                <option value=\"ISO 3166-2:BD\">Bangladesh</option>\n                <option value=\"ISO 3166-2:BB\">Barbados</option>\n                <option value=\"ISO 3166-2:BY\">Belarus</option>\n                <option value=\"ISO 3166-2:BE\">Belgium</option>\n                <option value=\"ISO 3166-2:BZ\">Belize</option>\n                <option value=\"ISO 3166-2:BJ\">Benin</option>\n                <option value=\"ISO 3166-2:BM\">Bermuda</option>\n                <option value=\"ISO 3166-2:BT\">Bhutan</option>\n                <option value=\"ISO 3166-2:BO\">Bolivia, Plurinational State of</option>\n                <option value=\"ISO 3166-2:BQ\">Bonaire, Sint Eustatius and Saba</option>\n                <option value=\"ISO 3166-2:BA\">Bosnia and Herzegovina</option>\n                <option value=\"ISO 3166-2:BW\">Botswana</option>\n                <option value=\"ISO 3166-2:BV\">Bouvet Island</option>\n                <option value=\"ISO 3166-2:BR\">Brazil</option>\n                <option value=\"ISO 3166-2:IO\">British Indian Ocean Territory</option>\n                <option value=\"ISO 3166-2:BN\">Brunei Darussalam</option>\n                <option value=\"ISO 3166-2:BG\">Bulgaria</option>\n                <option value=\"ISO 3166-2:BF\">Burkina Faso</option>\n                <option value=\"ISO 3166-2:BI\">Burundi</option>\n                <option value=\"ISO 3166-2:KH\">Cambodia</option>\n                <option value=\"ISO 3166-2:CM\">Cameroon</option>\n                <option value=\"ISO 3166-2:CA\">Canada</option>\n                <option value=\"ISO 3166-2:CV\">Cape Verde</option>\n                <option value=\"ISO 3166-2:KY\">Cayman Islands</option>\n                <option value=\"ISO 3166-2:CF\">Central African Republic</option>\n                <option value=\"ISO 3166-2:TD\">Chad</option>\n                <option value=\"ISO 3166-2:CL\">Chile</option>\n                <option value=\"ISO 3166-2:CN\">China</option>\n                <option value=\"ISO 3166-2:CX\">Christmas Island</option>\n                <option value=\"ISO 3166-2:CC\">Cocos (Keeling) Islands</option>\n                <option value=\"ISO 3166-2:CO\">Colombia</option>\n                <option value=\"ISO 3166-2:KM\">Comoros</option>\n                <option value=\"ISO 3166-2:CG\">Congo</option>\n                <option value=\"ISO 3166-2:CD\">Congo, the Democratic Republic of the</option>\n                <option value=\"ISO 3166-2:CK\">Cook Islands</option>\n                <option value=\"ISO 3166-2:CR\">Costa Rica</option>\n                <option value=\"ISO 3166-2:CI\">Côte d'Ivoire</option>\n                <option value=\"ISO 3166-2:HR\">Croatia</option>\n                <option value=\"ISO 3166-2:CU\">Cuba</option>\n                <option value=\"ISO 3166-2:CW\">Curaçao</option>\n                <option value=\"ISO 3166-2:CY\">Cyprus</option>\n                <option value=\"ISO 3166-2:CZ\">Czech Republic</option>\n                <option value=\"ISO 3166-2:DK\">Denmark</option>\n                <option value=\"ISO 3166-2:DJ\">Djibouti</option>\n                <option value=\"ISO 3166-2:DM\">Dominica</option>\n                <option value=\"ISO 3166-2:DO\">Dominican Republic</option>\n                <option value=\"ISO 3166-2:EC\">Ecuador</option>\n                <option value=\"ISO 3166-2:EG\">Egypt</option>\n                <option value=\"ISO 3166-2:SV\">El Salvador</option>\n                <option value=\"ISO 3166-2:GQ\">Equatorial Guinea</option>\n                <option value=\"ISO 3166-2:ER\">Eritrea</option>\n                <option value=\"ISO 3166-2:EE\">Estonia</option>\n                <option value=\"ISO 3166-2:ET\">Ethiopia</option>\n                <option value=\"ISO 3166-2:FK\">Falkland Islands (Malvinas)</option>\n                <option value=\"ISO 3166-2:FO\">Faroe Islands</option>\n                <option value=\"ISO 3166-2:FJ\">Fiji</option>\n                <option value=\"ISO 3166-2:FI\">Finland</option>\n                <option value=\"ISO 3166-2:FR\">France</option>\n                <option value=\"ISO 3166-2:GF\">French Guiana</option>\n                <option value=\"ISO 3166-2:PF\">French Polynesia</option>\n                <option value=\"ISO 3166-2:TF\">French Southern Territories</option>\n                <option value=\"ISO 3166-2:GA\">Gabon</option>\n                <option value=\"ISO 3166-2:GM\">Gambia</option>\n                <option value=\"ISO 3166-2:GE\">Georgia</option>\n                <option value=\"ISO 3166-2:DE\">Germany</option>\n                <option value=\"ISO 3166-2:GH\">Ghana</option>\n                <option value=\"ISO 3166-2:GI\">Gibraltar</option>\n                <option value=\"ISO 3166-2:GR\">Greece</option>\n                <option value=\"ISO 3166-2:GL\">Greenland</option>\n                <option value=\"ISO 3166-2:GD\">Grenada</option>\n                <option value=\"ISO 3166-2:GP\">Guadeloupe</option>\n                <option value=\"ISO 3166-2:GU\">Guam</option>\n                <option value=\"ISO 3166-2:GT\">Guatemala</option>\n                <option value=\"ISO 3166-2:GG\">Guernsey</option>\n                <option value=\"ISO 3166-2:GN\">Guinea</option>\n                <option value=\"ISO 3166-2:GW\">Guinea-Bissau</option>\n                <option value=\"ISO 3166-2:GY\">Guyana</option>\n                <option value=\"ISO 3166-2:HT\">Haiti</option>\n                <option value=\"ISO 3166-2:HM\">Heard Island and McDonald Islands</option>\n                <option value=\"ISO 3166-2:VA\">Holy See (Vatican City State)</option>\n                <option value=\"ISO 3166-2:HN\">Honduras</option>\n                <option value=\"ISO 3166-2:HK\">Hong Kong</option>\n                <option value=\"ISO 3166-2:HU\">Hungary</option>\n                <option value=\"ISO 3166-2:IS\">Iceland</option>\n                <option value=\"ISO 3166-2:IN\">India</option>\n                <option value=\"ISO 3166-2:ID\">Indonesia</option>\n                <option value=\"ISO 3166-2:IR\">Iran, Islamic Republic of</option>\n                <option value=\"ISO 3166-2:IQ\">Iraq</option>\n                <option value=\"ISO 3166-2:IE\">Ireland</option>\n                <option value=\"ISO 3166-2:IM\">Isle of Man</option>\n                <option value=\"ISO 3166-2:IL\">Israel</option>\n                <option value=\"ISO 3166-2:IT\">Italy</option>\n                <option value=\"ISO 3166-2:JM\">Jamaica</option>\n                <option value=\"ISO 3166-2:JP\">Japan</option>\n                <option value=\"ISO 3166-2:JE\">Jersey</option>\n                <option value=\"ISO 3166-2:JO\">Jordan</option>\n                <option value=\"ISO 3166-2:KZ\">Kazakhstan</option>\n                <option value=\"ISO 3166-2:KE\">Kenya</option>\n                <option value=\"ISO 3166-2:KI\">Kiribati</option>\n                <option value=\"ISO 3166-2:KP\">Korea, Democratic People's Republic of</option>\n                <option value=\"ISO 3166-2:KR\">Korea, Republic of</option>\n                <option value=\"ISO 3166-2:KW\">Kuwait</option>\n                <option value=\"ISO 3166-2:KG\">Kyrgyzstan</option>\n                <option value=\"ISO 3166-2:LA\">Lao People's Democratic Republic</option>\n                <option value=\"ISO 3166-2:LV\">Latvia</option>\n                <option value=\"ISO 3166-2:LB\">Lebanon</option>\n                <option value=\"ISO 3166-2:LS\">Lesotho</option>\n                <option value=\"ISO 3166-2:LR\">Liberia</option>\n                <option value=\"ISO 3166-2:LY\">Libya</option>\n                <option value=\"ISO 3166-2:LI\">Liechtenstein</option>\n                <option value=\"ISO 3166-2:LT\">Lithuania</option>\n                <option value=\"ISO 3166-2:LU\">Luxembourg</option>\n                <option value=\"ISO 3166-2:MO\">Macao</option>\n                <option value=\"ISO 3166-2:MK\">Macedonia, the former Yugoslav Republic of</option>\n                <option value=\"ISO 3166-2:MG\">Madagascar</option>\n                <option value=\"ISO 3166-2:MW\">Malawi</option>\n                <option value=\"ISO 3166-2:MY\">Malaysia</option>\n                <option value=\"ISO 3166-2:MV\">Maldives</option>\n                <option value=\"ISO 3166-2:ML\">Mali</option>\n                <option value=\"ISO 3166-2:MT\">Malta</option>\n                <option value=\"ISO 3166-2:MH\">Marshall Islands</option>\n                <option value=\"ISO 3166-2:MQ\">Martinique</option>\n                <option value=\"ISO 3166-2:MR\">Mauritania</option>\n                <option value=\"ISO 3166-2:MU\">Mauritius</option>\n                <option value=\"ISO 3166-2:YT\">Mayotte</option>\n                <option value=\"ISO 3166-2:MX\">Mexico</option>\n                <option value=\"ISO 3166-2:FM\">Micronesia, Federated States of</option>\n                <option value=\"ISO 3166-2:MD\">Moldova, Republic of</option>\n                <option value=\"ISO 3166-2:MC\">Monaco</option>\n                <option value=\"ISO 3166-2:MN\">Mongolia</option>\n                <option value=\"ISO 3166-2:ME\">Montenegro</option>\n                <option value=\"ISO 3166-2:MS\">Montserrat</option>\n                <option value=\"ISO 3166-2:MA\">Morocco</option>\n                <option value=\"ISO 3166-2:MZ\">Mozambique</option>\n                <option value=\"ISO 3166-2:MM\">Myanmar</option>\n                <option value=\"ISO 3166-2:NA\">Namibia</option>\n                <option value=\"ISO 3166-2:NR\">Nauru</option>\n                <option value=\"ISO 3166-2:NP\">Nepal</option>\n                <option value=\"ISO 3166-2:NL\">Netherlands</option>\n                <option value=\"ISO 3166-2:NC\">New Caledonia</option>\n                <option value=\"ISO 3166-2:NZ\">New Zealand</option>\n                <option value=\"ISO 3166-2:NI\">Nicaragua</option>\n                <option value=\"ISO 3166-2:NE\">Niger</option>\n                <option value=\"ISO 3166-2:NG\">Nigeria</option>\n                <option value=\"ISO 3166-2:NU\">Niue</option>\n                <option value=\"ISO 3166-2:NF\">Norfolk Island</option>\n                <option value=\"ISO 3166-2:MP\">Northern Mariana Islands</option>\n                <option value=\"ISO 3166-2:NO\">Norway</option>\n                <option value=\"ISO 3166-2:OM\">Oman</option>\n                <option value=\"ISO 3166-2:PK\">Pakistan</option>\n                <option value=\"ISO 3166-2:PW\">Palau</option>\n                <option value=\"ISO 3166-2:PS\">Palestinian Territory, Occupied</option>\n                <option value=\"ISO 3166-2:PA\">Panama</option>\n                <option value=\"ISO 3166-2:PG\">Papua New Guinea</option>\n                <option value=\"ISO 3166-2:PY\">Paraguay</option>\n                <option value=\"ISO 3166-2:PE\">Peru</option>\n                <option value=\"ISO 3166-2:PH\">Philippines</option>\n                <option value=\"ISO 3166-2:PN\">Pitcairn</option>\n                <option value=\"ISO 3166-2:PL\">Poland</option>\n                <option value=\"ISO 3166-2:PT\">Portugal</option>\n                <option value=\"ISO 3166-2:PR\">Puerto Rico</option>\n                <option value=\"ISO 3166-2:QA\">Qatar</option>\n                <option value=\"ISO 3166-2:RE\">Réunion</option>\n                <option value=\"ISO 3166-2:RO\">Romania</option>\n                <option value=\"ISO 3166-2:RU\">Russian Federation</option>\n                <option value=\"ISO 3166-2:RW\">Rwanda</option>\n                <option value=\"ISO 3166-2:BL\">Saint Barthélemy</option>\n                <option value=\"ISO 3166-2:SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n                <option value=\"ISO 3166-2:KN\">Saint Kitts and Nevis</option>\n                <option value=\"ISO 3166-2:LC\">Saint Lucia</option>\n                <option value=\"ISO 3166-2:MF\">Saint Martin (French part)</option>\n                <option value=\"ISO 3166-2:PM\">Saint Pierre and Miquelon</option>\n                <option value=\"ISO 3166-2:VC\">Saint Vincent and the Grenadines</option>\n                <option value=\"ISO 3166-2:WS\">Samoa</option>\n                <option value=\"ISO 3166-2:SM\">San Marino</option>\n                <option value=\"ISO 3166-2:ST\">Sao Tome and Principe</option>\n                <option value=\"ISO 3166-2:SA\">Saudi Arabia</option>\n                <option value=\"ISO 3166-2:SN\">Senegal</option>\n                <option value=\"ISO 3166-2:RS\">Serbia</option>\n                <option value=\"ISO 3166-2:SC\">Seychelles</option>\n                <option value=\"ISO 3166-2:SL\">Sierra Leone</option>\n                <option value=\"ISO 3166-2:SG\">Singapore</option>\n                <option value=\"ISO 3166-2:SX\">Sint Maarten (Dutch part)</option>\n                <option value=\"ISO 3166-2:SK\">Slovakia</option>\n                <option value=\"ISO 3166-2:SI\">Slovenia</option>\n                <option value=\"ISO 3166-2:SB\">Solomon Islands</option>\n                <option value=\"ISO 3166-2:SO\">Somalia</option>\n                <option value=\"ISO 3166-2:ZA\">South Africa</option>\n                <option value=\"ISO 3166-2:GS\">South Georgia and the South Sandwich Islands</option>\n                <option value=\"ISO 3166-2:SS\">South Sudan</option>\n                <option value=\"ISO 3166-2:ES\">Spain</option>\n                <option value=\"ISO 3166-2:LK\">Sri Lanka</option>\n                <option value=\"ISO 3166-2:SD\">Sudan</option>\n                <option value=\"ISO 3166-2:SR\">Suriname</option>\n                <option value=\"ISO 3166-2:SJ\">Svalbard and Jan Mayen</option>\n                <option value=\"ISO 3166-2:SZ\">Swaziland</option>\n                <option value=\"ISO 3166-2:SE\">Sweden</option>\n                <option value=\"ISO 3166-2:CH\">Switzerland</option>\n                <option value=\"ISO 3166-2:SY\">Syrian Arab Republic</option>\n                <option value=\"ISO 3166-2:TW\">Taiwan, Province of China</option>\n                <option value=\"ISO 3166-2:TJ\">Tajikistan</option>\n                <option value=\"ISO 3166-2:TZ\">Tanzania, United Republic of</option>\n                <option value=\"ISO 3166-2:TH\">Thailand</option>\n                <option value=\"ISO 3166-2:TL\">Timor-Leste</option>\n                <option value=\"ISO 3166-2:TG\">Togo</option>\n                <option value=\"ISO 3166-2:TK\">Tokelau</option>\n                <option value=\"ISO 3166-2:TO\">Tonga</option>\n                <option value=\"ISO 3166-2:TT\">Trinidad and Tobago</option>\n                <option value=\"ISO 3166-2:TN\">Tunisia</option>\n                <option value=\"ISO 3166-2:TR\">Turkey</option>\n                <option value=\"ISO 3166-2:TM\">Turkmenistan</option>\n                <option value=\"ISO 3166-2:TC\">Turks and Caicos Islands</option>\n                <option value=\"ISO 3166-2:TV\">Tuvalu</option>\n                <option value=\"ISO 3166-2:UG\">Uganda</option>\n                <option value=\"ISO 3166-2:UA\">Ukraine</option>\n                <option value=\"ISO 3166-2:AE\">United Arab Emirates</option>\n                <option value=\"ISO 3166-2:GB\">United Kingdom</option>\n                <option value=\"ISO 3166-2:US\">United States</option>\n                <option value=\"ISO 3166-2:UM\">United States Minor Outlying Islands</option>\n                <option value=\"ISO 3166-2:UY\">Uruguay</option>\n                <option value=\"ISO 3166-2:UZ\">Uzbekistan</option>\n                <option value=\"ISO 3166-2:VU\">Vanuatu</option>\n                <option value=\"ISO 3166-2:VE\">Venezuela, Bolivarian Republic of</option>\n                <option value=\"ISO 3166-2:VN\">Viet Nam</option>\n                <option value=\"ISO 3166-2:VG\">Virgin Islands, British</option>\n                <option value=\"ISO 3166-2:VI\">Virgin Islands, U.S.</option>\n                <option value=\"ISO 3166-2:WF\">Wallis and Futuna</option>\n                <option value=\"ISO 3166-2:EH\">Western Sahara</option>\n                <option value=\"ISO 3166-2:YE\">Yemen</option>\n                <option value=\"ISO 3166-2:ZM\">Zambia</option>\n                <option value=\"ISO 3166-2:ZW\">Zimbabwe</option>\n              </select>\n              <input id=\"zip\" placeholder=\"Zip Code*\" />\n            </div>\n          </div>\n        </div>\n        <div className='col-md-4'>\n          <div className='card orderInfo'>\n            <h2>Order Info</h2>\n            <div className='orderDetails'>\n              <div className='orderProduct'>\n                <p className='itemName'>Item</p>\n                <p className='itemPrice'>Unit Price</p>\n                <p className='itemQty'>Qty.</p>\n                <p className='itemTotal'>Total</p>\n              </div>\n            </div>\n            <button className='completePurchase'>Complete Purchase</button>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Checkout;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends React.PureComponent {\n  state = {\n    username: '',\n    password: '',\n    logginIn: 'placeholder'\n  }\n\n  usernameOnChange = e => {\n    this.setState({ username: e.target.value })\n  }\n\n  passwordOnChange = e => {\n    this.setState({ password: e.target.value })\n  }\n\n  loginHandler = async () => {\n    console.log(this.state.username, this.state.password)\n    const response = await fetch('http://localhost:25565/api/login', {\n      credentials: \"include\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({ username: this.state.username, password: this.state.password })\n    });\n    const data = await response.json();\n    this.setState({ loggedInMessage: data.message })\n  }\n\n  render() {\n    let loginMessage = '';\n    if (this.state.loggedInMessage === 'Logged in. Redirecting...'){\n      loginMessage = <div className='goodLoginDiv'><p className='goodLoginText'>Logged in. Redirecting...</p></div>;\n      return <Redirect to='/Admin/uwW7Vn3c6JMpVSsyNSfW3s5okVpup7k0IKbWmZ9mu6cMNuiZXi' />\n    } else if (this.state.loggedInMessage === 'Incorrect username or password'){\n      loginMessage = <div className='badLoginDiv'><p className='badLoginText'>Username or password is incorrect</p></div>;\n    }\n    return (\n      <div className='container container-bg loginContainer'>\n        <div className='card loginCard'>\n          <h1>Admin Login</h1>\n          <input className='loginUser' onChange={this.usernameOnChange} placeholder=\"Username\" />\n          <input className='loginPass' onChange={this.passwordOnChange} placeholder=\"Password\" />\n          <button className='loginBtn' onClick={this.loginHandler}>Login</button>\n          {loginMessage}\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\n\nclass ContactsAdmin extends React.Component {\n  state = {\n    products: [],\n    contacts: []\n  };\n  //Once component mounts fetch product and contact data\n  componentDidMount = () => {\n    this.fetchAllProducts();\n    this.fetchAllContacts();\n  }\n  //Fetch all product data\n  fetchAllProducts = async () => {\n    const port = process.env.PORT || 25565;\n    const fetchData = await fetch(`http://localhost:${port}/api/products/`);\n    const data = await fetchData.json();\n    this.setState({ products: data })\n  }\n  //Fetch all contact data\n  fetchAllContacts = async () => {\n    const port = process.env.PORT || 25565;\n    const fetchData = await fetch(`http://localhost:${port}/api/contacts/`);\n    const data = await fetchData.json();\n    this.setState({ contacts: data })\n  }\n\n  render() {\n    //Map over products array for displaying on the products table\n    const productsMap = this.state.products.map(product => (\n      <tr>\n        <td className='adminProductsTableProduct'>{product.product_id}</td>\n        <td className='adminProductsTableProduct'>{product.product_name}</td>\n        <td className='adminProductsTableProduct'>{product.product_price}</td>\n        <td className='adminProductsTableProduct' id='adminProductsTableType'>{product.product_type}</td>\n      </tr>\n    ))\n    //Map over the contacts array for displaying on the contacts table\n    const contactsMap = this.state.contacts.map(contact => (\n      <tr>\n        <td className='adminContactsTableContact'>{contact.contact_id}</td>\n        <td className='adminContactsTableContact'>{contact.contact_name}</td>\n        <td className='adminContactsTableContact'>{contact.contact_email}</td>\n        <td className='adminContactsTableContact'>{contact.subject}</td>\n        <td className='adminContactsTableContact' id='adminContactsTableMessage'>{contact.message}</td>\n      </tr>\n    ))\n    return (\n      <div className='container container-bg adminContainer'>\n        <div className='adminProductDiv'>\n        {/* Products table card */}\n        <h2>Products</h2>\n          <div className='card adminProductsCard'>\n            <table>\n              <thead>\n                <tr>\n                <td className='adminProductsTableHead'>Product ID</td>\n                <td className='adminProductsTableHead'>Product Name</td>\n                <td className='adminProductsTableHead'>Product Price</td>\n                <td className='adminProductsTableHead' id='adminProductsTableType'>Product Type</td>\n                </tr>\n                {productsMap}\n              </thead>\n              \n            </table>\n          </div>\n        </div>\n        <div className='adminContactsDiv'>\n        {/* Contacts table card */}\n          <h2>Contacts</h2>\n          <div className='card adminContactsCard'>\n          <table>\n              <thead>\n                <tr>\n                <td className='adminContactsTableHead'>Contact ID</td>\n                <td className='adminContactsTableHead'>Name</td>\n                <td className='adminContactsTableHead'>Email</td>\n                <td className='adminContactsTableHead'>Subject</td>\n                <td className='adminContactsTableHead' id='adminContactsTableMessage'>Message</td>\n                </tr>\n                {contactsMap}\n              </thead>\n              \n            </table>\n          </div>\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default ContactsAdmin;","// Dependencies\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\n\n\n//Components\nimport ProductsPage from \"./components/ProductsPage\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport Footer from \"./components/Footer\";\nimport Cart from \"./components/Cart\";\nimport Checkout from \"./components/Checkout\";\nimport Login from \"./components/Login\";\nimport ContactsAdmin from './components/ContactsAdmin'\n\n// CSS Files\nimport \"./css/bootstrap.min.css\";\nimport \"./css/mdb.min.css\";\nimport \"./css/style.css\";\nimport \"./css/slide.css\";\nimport \"./App.css\";\n\n//React Context for cart\nimport MyContext from './components/Context'\n\n\n\nclass App extends React.PureComponent {\n  state = {\n    cart: []\n  }\n  //Function for adding items to cart. Avoids creating copies by adding to a quantity counter\n  addToCart = (addedProduct) => () => {\n    //Checking if the product already exists in the cart\n    const productExistsInCart = this.state.cart.some(product => addedProduct.productName === product.productName)\n    //If it does not exist..\n    if (!productExistsInCart) {\n      //Copy the cart array from state to avoid mutating state\n      const addProduct = this.state.cart.splice()\n      //Push the added product to the cart\n      addProduct.push(addedProduct)\n      //Add a key and qunatity value to the added product\n      const updatedCart = addProduct.map((product, index) => {\n        if (product.productName === addedProduct.productName) {\n          return {\n            ...product,\n            quantity: 1,\n            key: index\n          }\n        } return product\n      })\n      //Spread current state with updated cart information\n      this.setState(prevState => ({\n        cart: [...prevState.cart, ...updatedCart]\n      }))\n      //If the product does exist..\n    } else {\n      // Add 1 to the quantity key for the added product\n      const updatedCart = this.state.cart.map((product) => {\n        if (product.productName === addedProduct.productName) {\n          if (product.quantity) {\n            return {\n              ...product,\n              quantity: product.quantity + 1\n            }\n          } else {\n            return {\n              ...product,\n              quantity: 1\n            }\n          }\n        }\n        return product;\n      })\n      //Setting state to updated cart\n      this.setState({ cart: updatedCart });\n    }\n\n  }\n  \n  render() {\n    //Calculate total of products for showing in the navBar\n    let totalOfProducts = 0;\n    this.state.cart.forEach(product => {\n      \n      totalOfProducts += product.quantity;\n    })\n    //\n    return (\n      //Add in MyContext to keep track of items in cart\n      <MyContext.Provider value={{\n        cart: this.state.cart,\n        addToCart: this.addToCart\n      }}>\n        {/* React router for navigating through pages without server call */}\n        <Router>\n          {/* <!--Navbar--> */}\n          <nav className=\"navbar navbar-expand-lg navbar-dark primary-color\">\n            {/* <!-- Navbar brand --> */}\n            <Link className=\"navbar-brand\" to=\"/\">\n              DB Electronics\n            </Link>\n\n            {/* <!-- Collapse button --> */}\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#basicExampleNav\"\n              aria-controls=\"basicExampl eNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n\n            {/* <!-- Collapsible content --> */}\n            <div className=\"collapse navbar-collapse\" id=\"basicExampleNav\">\n              {/* <!-- Links --> */}\n              <ul className=\"navbar-nav mr-auto\">\n                <NavLink\n                  className=\"navBarLink nav-link\"\n                  exact={true}\n                  activeClassName=\"active\"\n                  to=\"/\"\n                >\n                  <li className=\"nav-item\">Home</li>\n                </NavLink>\n                <NavLink\n                  className=\"navBarLink nav-link\"\n                  activeClassName=\"active\"\n                  to=\"/Products/\"\n                >\n                  <li className=\"nav-item\">Products</li>\n                </NavLink>\n                <NavLink\n                  className=\"navBarLink nav-link\"\n                  activeClassName=\"active\"\n                  to=\"/Contact\"\n                >\n                  <li className=\"nav-item\">Contact Us!</li>\n                </NavLink>\n                <NavLink\n                  className='navBarLink nav-link'\n                  activeClassName=\"active\"\n                  to=\"/Cart\"\n                >\n                  <li className=\"nav-item\">Cart ({totalOfProducts})</li>\n                </NavLink>\n                <NavLink\n                  className='navBarLink nav-link'\n                  activeClassName=\"active\"\n                  to=\"/login\"\n                >\n                  <li className=\"nav-item\">Login</li>\n                </NavLink>\n              </ul>\n              {/* <!-- Links --> */}\n            </div>\n            {/* <!-- Collapsible content --> */}\n          </nav>\n          {/* <!--/.Navbar--> */}\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/Products\" component={ProductsPage} />\n          <Route path=\"/Contact\" component={Contact} />\n          <Route path=\"/Cart\" component={Cart} />\n          <Route path=\"/Checkout\" component={Checkout} />\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/Admin/uwW7Vn3c6JMpVSsyNSfW3s5okVpup7k0IKbWmZ9mu6cMNuiZXi\" component={ContactsAdmin} />\n          <Footer />\n        </Router>\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}